geometry:
  function space: StructuredColumns
  grid:
    type: regular_gaussian
    N: 12
  groups:
  - variables:
    - eastward_wind
    - mu
    - northward_wind
    - streamfunction
    - unbalanced_pressure_levels_minus_one
    - velocity_potential
    levels: 70
  partitioner: ectrans
  halo: 1

background:
  date: &date 2010-01-01T12:00:00Z
  state variables: &vars
  - eastward_wind
  - northward_wind
  - unbalanced_pressure_levels_minus_one
  - mu


bands:
- band:
    filter:
      saber central block:
        saber block name: ID
      saber outer blocks:
      - saber block name: spectral analytical filter
        function:
          shape: waveband filter
          waveband min: 0
          waveband peak: 1
          waveband max: 3
        preserving variance: true
        active variables:
        - mu
        - streamfunction
        - unbalanced_pressure_levels_minus_one
        - velocity_potential
      - saber block name: spectral to gauss
        active variables:
        - eastward_wind
        - mu
        - northward_wind
        - streamfunction
        - unbalanced_pressure_levels_minus_one
        - velocity_potential
        filter mode: true # instead of running the adjoint code it runs the inverse
      - saber block name: write variances
        binning:
          type: "horizontal global average"
        filter mode: true # instead of running the adjoint code it runs the inverse
        instantaneous statistics:
          multiply fset filename: "multiply_wb1"
          left inverse fset filename: "initial_increment"
          output path: "testdata/process_perts_from_gauss_perts_2/"
  output:
    model write:
      filepath: testdata/process_perts_from_gauss_perts_2/filtered_pert_mb%MEM%_wb1
      member pattern: '%MEM%'
- band:
    filter:
      saber central block:
        saber block name: ID
      saber outer blocks:
      - saber block name: spectral analytical filter
        function:
          shape: waveband filter
          waveband min: 1
          waveband peak: 3
          waveband max: 9
        preserving variance: true
        active variables:
        - mu
        - streamfunction
        - unbalanced_pressure_levels_minus_one
        - velocity_potential
      - saber block name: spectral to gauss
        active variables:
        - eastward_wind
        - mu
        - northward_wind
        - streamfunction
        - unbalanced_pressure_levels_minus_one
        - velocity_potential
        filter mode: true # instead of running the adjoint code it runs the inverse
      - saber block name: write variances
        binning:
          type: "horizontal global average"
        instantaneous statistics:
          multiply fset filename: "multiply_wb2"
          output path: "testdata/process_perts_from_gauss_perts_2/"
  output:
    model write:
      filepath: testdata/process_perts_from_gauss_perts_2/filtered_pert_mb%MEM%_wb2
      member pattern: '%MEM%'
- band:
    filter:
      saber central block:
        saber block name: ID
      saber outer blocks:
      - saber block name: spectral analytical filter
        function:
          shape: waveband filter
          waveband min: 3
          waveband peak: 9
          waveband max: 23 # last waveband max need to be 2N - 1
        preserving variance: true
        active variables:
        - mu
        - streamfunction
        - unbalanced_pressure_levels_minus_one
        - velocity_potential
      - saber block name: spectral to gauss
        active variables:
        - eastward_wind
        - mu
        - northward_wind
        - streamfunction
        - unbalanced_pressure_levels_minus_one
        - velocity_potential
        filter mode: true # instead of running the adjoint code it runs the inverse
      - saber block name: write variances
        binning:
          type: "horizontal global average"
        instantaneous statistics:
          multiply fset filename: "multiply_wb3"
          output path: "testdata/process_perts_from_gauss_perts_2/"
  output:
    model write:
      filepath: testdata/process_perts_from_gauss_perts_2/filtered_pert_mb%MEM%_wb3
      member pattern: '%MEM%'
ensemble pert:
  date: *date
  members from template:
    nmembers: 2
    pattern: '%MEM%'
    template:
      filepath: testdata/randomization_sqrtspectralb_1/randomized_gauss_mb%MEM%
      variables: *vars

input variables: *vars

test:
  reference filename: testref/process_perts_from_gauss_perts_2.ref
