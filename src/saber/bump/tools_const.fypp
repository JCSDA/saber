#:include 'instrumentation.fypp'
!----------------------------------------------------------------------
! Module: tools_const
!> Define usual constants
! Author: Benjamin Menetrier
! Licensing: this code is distributed under the CeCILL-C license
! Copyright 2015-... UCAR, CERFACS, METEO-FRANCE and IRIT
!----------------------------------------------------------------------
module tools_const

use atlas_module, only: atlas_geometry
use tools_kinds, only: kind_real

implicit none

! Aliases
real(kind_real),parameter :: zero = 0.0_kind_real         !< Zero
real(kind_real),parameter :: hundredth = 0.01_kind_real   !< Hundredth
real(kind_real),parameter :: tenth = 0.1_kind_real        !< Tenth
real(kind_real),parameter :: quarter = 0.25_kind_real     !< Quarter
real(kind_real),parameter :: half = 0.5_kind_real         !< Half
real(kind_real),parameter :: one = 1.0_kind_real          !< One
real(kind_real),parameter :: two = 2.0_kind_real          !< Two
real(kind_real),parameter :: three = 3.0_kind_real        !< Three
real(kind_real),parameter :: four = 4.0_kind_real         !< Four
real(kind_real),parameter :: five = 5.0_kind_real         !< Five
real(kind_real),parameter :: six = 6.0_kind_real          !< Six
real(kind_real),parameter :: seven = 7.0_kind_real        !< Seven
real(kind_real),parameter :: eight = 8.0_kind_real        !< Eight
real(kind_real),parameter :: ten = 10.0_kind_real         !< Ten
real(kind_real),parameter :: twelve = 12.0_kind_real      !< Twelve
real(kind_real),parameter :: hundred = 100.0_kind_real    !< Hundred
real(kind_real),parameter :: thousand = 1000.0_kind_real  !< Thousand

! Angle conversions
real(kind_real),parameter :: pi = acos(-1.0_kind_real)    !< Pi
real(kind_real),parameter :: deg2rad = pi/180.0_kind_real !< Degree to radian
real(kind_real),parameter :: rad2deg = 180.0_kind_real/pi !< Radian to degree

! Geophysical constants
real(kind_real),parameter :: req = 6371229.0_kind_real    !< Earth radius [in m]
real(kind_real),parameter :: reqkm = 6371.229_kind_real   !< Earth radius [in km]
real(kind_real),parameter :: ps = 101325.0_kind_real      !< Reference surface pressure [in Pa]

! Unit sphere geometry
type(atlas_geometry) :: ageometry                         !< ATLAS geometry (unit sphere)

interface initialize_constants
   module procedure const_initialize_constants
end interface

public

contains

!----------------------------------------------------------------------
! Subroutine: const_initialize_constants
!> Initialize constants
!----------------------------------------------------------------------
subroutine const_initialize_constants

implicit none

! Set name
@:set_name(const_initialize_constants)

! Probe in
@:probe_in()

! ATLAS geometry for a unit sphere
ageometry = atlas_geometry('UnitSphere')

! Probe out
@:probe_out()

end subroutine const_initialize_constants

end module tools_const
