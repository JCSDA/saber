version: 0.2

env:
  parameter-store:
    GIT_USER: "/CodeBuild/Git_USER"
    GIT_PASS: "/CodeBuild/Git_PASS"

phases:
  install:
    commands:
      - echo Executing install phase
      - echo $CODEBUILD_RESOLVED_SOURCE_VERSION
      - echo $CODEBUILD_SOURCE_REPO_URL
      - org_name=$(echo $CODEBUILD_SOURCE_REPO_URL | awk '{split($0,org,"/"); print org[4]}')
      - echo $org_name
      - echo $CODEBUILD_SOURCE_VERSION

      - echo $CODEBUILD_WEBHOOK_MERGE_COMMIT
      - echo $CODEBUILD_WEBHOOK_PREV_COMMIT
      - echo $CODEBUILD_WEBHOOK_HEAD_REF
      - echo $CODEBUILD_WEBHOOK_ACTOR_ACCOUNT_ID
      - echo $CODEBUILD_WEBHOOK_EVENT
      - echo $CODEBUILD_WEBHOOK_TRIGGER
      - echo $CODEBUILD_WEBHOOK_BASE_REF

      # Codebuild only runs on PUSH events if HEAD_REF
      # is refs/heads/develop (merge to develop). In this
      # case CODEBUILD_GIT_BRANCH="develop"
      - if [ "$CODEBUILD_WEBHOOK_EVENT" = "PUSH" ];
        then export CODEBUILD_GIT_BRANCH="develop";
        echo "Merging to develop";
        else export CODEBUILD_GIT_BRANCH=${CODEBUILD_WEBHOOK_HEAD_REF#refs/heads/};
        fi

      - echo "CODEBUILD_GIT_BRANCH=${CODEBUILD_GIT_BRANCH}"
      - echo "CODEBUILD_SOURCE_VERSION=${CODEBUILD_SOURCE_VERSION}"

  pre_build:
    commands:
      - echo Executing pre_build phase
      - git lfs install # creates .gitconfig
      - mkdir -p /jcsda/saber-bundle

      # Upload branch name and commit sha as CodeBuild artifact to S3
      - mkdir -p /jcsda/artifacts
      - echo ${CODEBUILD_GIT_BRANCH} > /jcsda/artifacts/branch_name.txt
      - echo ${CODEBUILD_RESOLVED_SOURCE_VERSION} > /jcsda/artifacts/commit_sha.txt

      - cd CI

      # jedi-cmake
      - ./clone.sh $GIT_USER $GIT_PASS jcsda-internal/jedi-cmake $CODEBUILD_GIT_BRANCH jedicmake /jcsda/saber-bundle develop
      # oops
      - ./clone.sh $GIT_USER $GIT_PASS jcsda-internal/oops $CODEBUILD_GIT_BRANCH oops /jcsda/saber-bundle develop
      # saber
      - ./clone.sh $GIT_USER $GIT_PASS jcsda-internal/saber $CODEBUILD_GIT_BRANCH saber /jcsda/saber-bundle develop

      # move CMakeLists.txt
      - cp CMakeLists.txt /jcsda/saber-bundle
      - cp -r cmake /jcsda/saber-bundle/
      # cdash upload setup
      - cp /jcsda/saber-bundle/cmake/CTestConfig.cmake /jcsda/saber-bundle/

      - chmod -R 777 /jcsda/saber-bundle

  build:
    on-failure: CONTINUE
    commands:
      - echo Executing build phase
      - echo $CODEBUILD_BUILD_SUCCEEDING
      - export BUILD_STATUS="0"
      - echo $BUILD_STATUS

      - su - jedi -c "cd /home/jedi
        && export FC=mpifort
        && export CC=mpicc
        && export CXX=mpicxx
        &&  ecbuild -Wno-dev -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCDASH_OVERRIDE_GIT_BRANCH=$CODEBUILD_GIT_BRANCH -DCTEST_UPDATE_VERSION_ONLY=FALSE -DENABLE_GPROF=ON -DCMAKE_CXX_COMPILER=$(which g++) -DCMAKE_C_COMPILER=$(which gcc) -DCMAKE_Fortran_COMPILER=$(which gfortran) /jcsda/saber-bundle/"

      - su - jedi -c "cd /home/jedi/saber
        && export FC=mpifort
        && export CC=mpicc
        && export CXX=mpicxx
        && cp ../DartConfiguration.tcl .
        && sed -i 's/saber-bundle/saber-bundle\/saber/' DartConfiguration.tcl
        && sed -i 's/jedi/jedi\/saber/' DartConfiguration.tcl
        && cat DartConfiguration.tcl
        && make -j4"

      - if [ "$CODEBUILD_BUILD_SUCCEEDING" = "1" ];
        then export BUILD_STATUS="1";
        echo "Build passed";
        fi
      - echo $BUILD_STATUS

      - su - jedi -c "cd /home/jedi/saber
        && export FC=mpifort
        && export CC=mpicc
        && export CXX=mpicxx
        && ctest -C RelWithDebInfo -D ExperimentalTest"

    finally:
      # upload ctest report to CDASH
      - su - jedi -c "cd /home/jedi/saber
        && export FC=mpifort
        && export CC=mpicc
        && export CXX=mpicxx
        && ctest -C RelWithDebInfo -D ExperimentalSubmit -M Continuous -- --track Continuous --group Continuous"

  post_build:
    commands:
      - echo Executing post_build phase
      - echo $CODEBUILD_BUILD_SUCCEEDING
      - echo $BUILD_STATUS

      # upload find cdash url and upload it as CodeBuild artifact to S3
      - if [ "$BUILD_STATUS" = "1" ];
        then echo "Build & tests passed, find cdash url";
        bash /jcsda/saber-bundle/saber/CI/cdash-url.sh /home/jedi/saber/Testing;
        url=$(bash /jcsda/saber-bundle/saber/CI/cdash-url.sh /home/jedi/saber/Testing);
        echo $url;
        echo ${url} > /jcsda/artifacts/cdash-url.txt;
        cat /jcsda/artifacts/cdash-url.txt;
        else echo "Build failed";
        fi

      - echo 'Connect to CodeCov'
      - cd /home/jedi/saber
      - pwd
      - ls
      - bash /jcsda/saber-bundle/saber/CI/codecov_script_$org_name.sh

artifacts:
  files:
    - '/jcsda/artifacts/*'
  name: saber-gnu-url
